TODO

features:

for long api requests (fullsync and fulldownload), turn off song visualiser and use the titlebar as a progress bar to show the websocket progress.
    or use the seekerbar

when adding a new song, start playing the added song immediately

local thumbnail cache
    might not be necessary with disk cache
    should not be that bad
    dont need a music cache since rate of music requests is significantly lower than rate of thumb requests
        therefore music cache is not space efficient at all, while thumb cache is quite space efficient


find a way to speed up initial playlist data fetching
    maybe removing the shallow fetch and generating the shallow version from the deep version just on the client?

    dont fetch the deep, just fetch shallow, and then fetch deep when necessary
        homepage just requires shallow, everything else will make a deep request

    simplify schema on the server to reduce time spent constructing it
        or write sql using lots of joins to create the necessary table and construct schema from that



add local keybinds (hotkey.js?)

add more valid extractors (soundcloud, etc)

confirmation menu and dialog box
    only really need to add me when needed

add multiple song selection to song page

action history with undo option

make search only apply after finish typing for large playlists due to lag

get lyrics of song (muzicbrainz / genius maybe?)

add a cursor to visible search bars
    add highlights to the song lists to indicate that a search is enabled

add sound effects to buttons (e.g. mechanical click for the slider checkboxes)
    enable/disable in options

song source should always be file and not stream
    not really feasible since they take time to download

show currently fetching song while it's being fetched

allow spam skipping

queue editing

store more efficiently
    currently songs appear multiple times for each playlist
    so instead each playlist should just reference a UUID
    electron-store?

extract video chapters
    for albums that are all in one video

in playlist comparison add opposite arrow to remove this song from the opposing playlist

click on images/thumbnails to play song

add a progress bar
    display song being downloaded, and use the seeker bar as a loading bar to show progress.
    add feedback notifications (e.g. a toast when you add a new song)

hold shift in playlist comparison adds all
    or add a merge/copy right click to playlists



BACKLOG:  put here features that dont make any sense right now or arent important at all

    add keybind to immediately focus the window
    mass get song metadata (getJson > track, artist etc)
    add wait for next frame to all draw pages?
    peer-to-peer listen along
        maybe use browser protocols to share links
        see P2P technologies

            made redundant with the pi server - should be able to handle listen along pretty easily
                websocket sending pauses and stuff?

    use youtube-dlp for faster downloads?
        https://github.com/wololo-aeyoyo/youtube-dl-exec

DONE (sort of):
scan clipboard for youtube links and prompt for adding song
manually add songs to a temporary playlist?
contextmenus for playlists and such
add styling to :active pseudo-selector to improve responsiveness
a playlist view
a song view
add an options page


bugs:
fix flicker when adding/removing songs to playlist page
when playing a new song automatically, and it ends up with no source, a duplicate of the current song will be added to history.
context menu items still active even when right click, indicating that something will happen when in reality nothing happens
high gpu usage even when alt-tabbed?
    seems to jump when open task manager???
playing songs sometimes stutter? may be to do with the visualiser, or smth else entirely
sometimes already played songs dont seem to have a file cache
    maybe fixed?
when song ends current time stops increasing but playback jumps to a random spot earlier
    maybe check if current time = duration to make sure song ends properly
    also just fade volume based on where current time is for song fading
seeker popper is a bit janky


FOR PLAYLIST IMPORTING
https://github.com/LaurenceRawlings/savify
https://github.com/deepjyoti30/ytmdl
